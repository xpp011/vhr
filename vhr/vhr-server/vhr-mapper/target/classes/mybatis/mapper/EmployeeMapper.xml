<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.xpp011.vhr.mapper.EmployeeMapper">
    <resultMap id="BaseResultMap" type="employee">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="gender" property="gender" jdbcType="CHAR"/>
        <result column="birthday" property="birthday" jdbcType="DATE"/>
        <result column="idCard" property="idCard" jdbcType="CHAR"/>
        <result column="wedlock" property="wedlock" jdbcType="CHAR"/>
        <result column="nationId" property="nationId" jdbcType="INTEGER"/>
        <result column="nativePlace" property="nativePlace" jdbcType="VARCHAR"/>
        <result column="politicId" property="politicId" jdbcType="INTEGER"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="departmentId" property="departmentId" jdbcType="INTEGER"/>
        <result column="jobLevelId" property="jobLevelId" jdbcType="INTEGER"/>
        <result column="posId" property="posId" jdbcType="INTEGER"/>
        <result column="engageForm" property="engageForm" jdbcType="VARCHAR"/>
        <result column="tiptopDegree" property="tiptopDegree" jdbcType="CHAR"/>
        <result column="specialty" property="specialty" jdbcType="VARCHAR"/>
        <result column="school" property="school" jdbcType="VARCHAR"/>
        <result column="beginDate" property="beginDate" jdbcType="DATE"/>
        <result column="workState" property="workState" jdbcType="CHAR"/>
        <result column="workID" property="workID" jdbcType="CHAR"/>
        <result column="contractTerm" property="contractTerm" jdbcType="DOUBLE"/>
        <result column="conversionTime" property="conversionTime" jdbcType="DATE"/>
        <result column="notWorkDate" property="notWorkDate" jdbcType="DATE"/>
        <result column="beginContract" property="beginContract" jdbcType="DATE"/>
        <result column="endContract" property="endContract" jdbcType="DATE"/>
        <result column="workAge" property="workAge" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap id="AllEmployeeInfo" type="employee" extends="BaseResultMap">
        <association property="nation" javaType="nation">
            <id column="nid" property="id"/>
            <result column="nname" property="name"/>
        </association>
        <association property="politicsstatus" javaType="politicsstatus">
            <id column="pid" property="id"/>
            <result column="pnaem" property="name"/>
        </association>
        <association property="department" javaType="department">
            <id column="did" property="id"/>
            <result column="dname" property="name"/>
        </association>
        <association property="jobLevel" javaType="jobLevel">
            <id column="jid" property="id"/>
            <result column="jname" property="name"/>
        </association>
        <association property="position" javaType="position">
            <id column="posid" property="id"/>
            <result column="posname" property="name"/>
        </association>
    </resultMap>


    <select id="getAllEmp" resultMap="AllEmployeeInfo" parameterType="int">
        SELECT e.*,p.id pid,p.name pnaem,n.id nid ,n.name nname,d.id did,d.name dname ,j.id jid,j.name jname,pos.id posid,pos.name posname
        FROM `employee` e ,`nation` n ,`politicsstatus` p,`department` d,`joblevel` j,`position` pos
        WHERE e.`nationId`=n.id AND e.`politicId`=p.id AND e.`departmentId`=d.id AND e.`jobLevelId`=j.id AND e.`posId`=pos.id

        <if test="emp.name!=null and emp.name!=''">
            and e.name  like concat('%',#{emp.name},'%')
        </if>

        <if test="emp.politicId!=null">
            and e.politicId=#{emp.politicId}
        </if>

        <if test="emp.nationId!=null">
            and e.nationId=#{emp.nationId}
        </if>

        <if test="emp.posId!=null">
            and e.posId=#{emp.posId}
        </if>

        <if test="emp.jobLevelId!=null">
            and e.jobLevelId=#{emp.jobLevelId}
        </if>

        <if test="emp.departmentId!=null">
            and e.departmentId=#{emp.departmentId}
        </if>

        <if test="emp.engageForm!=null and emp.engageForm!=''">
            and e.engageForm=#{emp.engageForm}
        </if>

        <if test="bed!=null">
            and e.beginDate between #{bed[0]} and #{bed[1]}
        </if>

        <if test="page!=null and size!=null">
            limit #{page},#{size}
        </if>
    </select>

    <resultMap id="EmployeeWithSalary" type="employee" extends="BaseResultMap">
        <association property="salary" javaType="salary">
            <id column="sid" property="id" jdbcType="INTEGER"/>
            <result column="sbasicSalary" property="basicSalary" jdbcType="INTEGER"/>
            <result column="sbonus" property="bonus" jdbcType="INTEGER"/>
            <result column="slunchSalary" property="lunchSalary" jdbcType="INTEGER"/>
            <result column="strafficSalary" property="trafficSalary" jdbcType="INTEGER"/>
            <result column="sallSalary" property="allSalary" jdbcType="INTEGER"/>
            <result column="spensionBase" property="pensionBase" jdbcType="INTEGER"/>
            <result column="spensionPer" property="pensionPer" jdbcType="REAL"/>
            <result column="screateDate" property="createDate" jdbcType="TIMESTAMP"/>
            <result column="smedicalBase" property="medicalBase" jdbcType="INTEGER"/>
            <result column="smedicalPer" property="medicalPer" jdbcType="REAL"/>
            <result column="saccumulationFundBase" property="accumulationFundBase" jdbcType="INTEGER"/>
            <result column="saccumulationFundPer" property="accumulationFundPer" jdbcType="REAL"/>
            <result column="sname" property="name" jdbcType="VARCHAR"/>
        </association>
        <association property="department" javaType="department">
            <result column="dname" property="name"/>
        </association>
    </resultMap>


    <select id="getTotal" resultType="long">
        select count(*)
        from `employee`
        <where>
         <if test="emp!=null">
            <if test="emp.name!=null and emp.name!=''">
                and name  like concat('%',#{emp.name},'%')
            </if>

            <if test="emp.politicId!=null">
                and politicId=#{emp.politicId}
            </if>

            <if test="emp.nationId!=null">
                and nationId=#{emp.nationId}
            </if>

            <if test="emp.posId!=null">
                and posId=#{emp.posId}
            </if>

            <if test="emp.jobLevelId!=null">
                and jobLevelId=#{emp.jobLevelId}
            </if>

            <if test="emp.departmentId!=null">
                and departmentId=#{emp.departmentId}
            </if>

            <if test="emp.engageForm!=null and emp.engageForm!=''">
                and engageForm=#{emp.engageForm}
            </if>
         </if>
            <if test="bed!=null">
                and beginDate between #{bed[0]} and #{bed[1]}
            </if>
        </where>
    </select>

    <!--主键回填  回填id属性-->
    <insert id="addEmp" parameterType="employee" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `employee`(`name`,`gender`,`birthday`,`idCard`,`wedlock`,`nationId`,`nativePlace`,`politicId`,`email`,`phone`,`address`,`departmentId`,`jobLevelId`,`posId`,`engageForm`,`tiptopDegree`,`specialty`,`school`,`beginDate`,`workState`,`workID`,`contractTerm`,`conversionTime`,`notWorkDate`,`beginContract`,`endContract`,`workAge`)
        VALUES(#{name},#{gender},#{birthday},#{idCard},#{wedlock},#{nationId},#{nativePlace},#{politicId},#{email},#{phone},#{address},#{departmentId},#{jobLevelId},#{posId},#{engageForm},#{tiptopDegree},#{specialty},#{school},#{beginDate},#{workState},#{workID},#{contractTerm},#{conversionTime},#{notWorkDate},#{beginContract},#{endContract},#{workAge})
    </insert>

    <select id="getEmpById" resultMap="AllEmployeeInfo">
        SELECT e.*,p.id pid,p.name pnaem,n.id nid ,n.name nname,d.id did,d.name dname ,j.id jid,j.name jname,pos.id posid,pos.name posname
        FROM `employee` e ,`nation` n ,`politicsstatus` p,`department` d,`joblevel` j,`position` pos
        WHERE e.`nationId`=n.id AND e.`politicId`=p.id AND e.`departmentId`=d.id AND e.`jobLevelId`=j.id AND e.`posId`=pos.id
        and e.id=#{id}
    </select>

    <select id="getMaxworkID" resultType="int">
        select max(workID) from `employee`
    </select>


    <delete id="deleteEmpById" parameterType="int">
        delete from `employee` where id=#{id}
    </delete>

    <update id="updateEmp" parameterType="employee">
        UPDATE `employee` SET `name`=#{name},`gender`=#{gender},`birthday`=#{birthday},`idCard`=#{idCard},`wedlock`=#{wedlock},`nationId`=#{nationId},`nativePlace`=#{nativePlace},`politicId`=#{politicId},`email`=#{email},`phone`=#{phone},
                              `address`=#{address},`departmentId`=#{departmentId},`jobLevelId`=#{jobLevelId},`posId`=#{posId},`engageForm`=#{engageForm},`tiptopDegree`=#{tiptopDegree},`specialty`=#{specialty},`school`=#{school},`beginDate`=#{beginDate},`workState`=#{workState},`workID`=#{workID},`contractTerm`=#{contractTerm}
                ,`conversionTime`=#{conversionTime},`notWorkDate`=#{notWorkDate},`beginContract`=#{beginContract},`endContract`=#{endContract},`workAge`=#{workAge} where id=#{id}
    </update>


    <resultMap id="AllEmployeeWithSalaryPageMap" type="employee" extends="BaseResultMap">
        <association property="salary" javaType="salary">
            <id column="sid" property="id" jdbcType="INTEGER"/>
            <result column="sbasicSalary" property="basicSalary" jdbcType="INTEGER"/>
            <result column="sbonus" property="bonus" jdbcType="INTEGER"/>
            <result column="slunchSalary" property="lunchSalary" jdbcType="INTEGER"/>
            <result column="strafficSalary" property="trafficSalary" jdbcType="INTEGER"/>
            <result column="sallSalary" property="allSalary" jdbcType="INTEGER"/>
            <result column="spensionBase" property="pensionBase" jdbcType="INTEGER"/>
            <result column="spensionPer" property="pensionPer" jdbcType="REAL"/>
            <result column="screateDate" property="createDate" jdbcType="TIMESTAMP"/>
            <result column="smedicalBase" property="medicalBase" jdbcType="INTEGER"/>
            <result column="smedicalPer" property="medicalPer" jdbcType="REAL"/>
            <result column="saccumulationFundBase" property="accumulationFundBase" jdbcType="INTEGER"/>
            <result column="saccumulationFundPer" property="accumulationFundPer" jdbcType="REAL"/>
            <result column="sname" property="name" jdbcType="VARCHAR"/>
        </association>
        <association property="department" javaType="department">
            <id column="did" property="id"/>
            <result column="dname" property="name"/>
        </association>
    </resultMap>


    <select id="getAllEmployeeWithSalaryPage" resultMap="AllEmployeeWithSalaryPageMap">
        SELECT e.*,d.id did,d.name dname ,s.id sid,s.`basicSalary` sbasicSalary,s.`bonus` sbonus,s.`lunchSalary` slunchSalary,s.`trafficSalary` strafficSalary,s.`allSalary` sallSalary,
               s.`pensionBase` spensionBase,s.`pensionPer`  spensionPer,s.`createDate` screateDate,s.`medicalBase` smedicalBase,s.`medicalPer` smedicalPer,s.`accumulationFundBase` saccumulationFundBase,s.`accumulationFundPer` saccumulationFundPer,s.`name` sname

        FROM `employee` e LEFT JOIN `empsalary` es  ON e.id = es.eid LEFT JOIN  `salary` s  ON es.sid=s.id LEFT  JOIN `department` d ON e.`departmentId`=d.id
        limit #{page},#{size}
    </select>

</mapper>